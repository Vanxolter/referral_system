volumes:
  pgdata:
  static:
  media:

services:

  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: always
    env_file:
      - docker/env/.env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_MAX_CONNECTIONS=500

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    restart: always
    env_file:
      - docker/env/.env.dev
    ports:
      - "6432:6432"
    volumes:
      - ./docker/pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini
      - ./docker/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    depends_on:
      - postgres

  django:
    build:
      context: .
    ports:
      - '8000:8000'
    container_name: django
    env_file:
      - docker/env/.env.dev
    volumes:
      - ./:/app
      - static:/app/static
      - media:/app/referral_system/media
    depends_on:
      - postgres
      - redis
    command: sh -c "python manage.py collectstatic --no-input &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn referral_system.wsgi:application --bind 0.0.0.0:8000 --workers 8 --reload
      "

  nginx:
    container_name: nginx
    working_dir: /app
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - static:/app/static
      - media:/app/referral_system/media
      - ./docker/nginx/dev/:/etc/nginx/conf.d:ro
    links:
      - django
    depends_on:
      - django

  redis:
    image: redis:alpine
    container_name: redis
    env_file:
      - docker/env/.env.dev
    expose:
      - 6379
    volumes:
      - ./docker/redis/data:/data

  celery-worker:
    build: .
    container_name: celery-worker
    restart: always
    env_file:
      - docker/env/.env.dev
    volumes:
      - ./:/app
      - media:/app/referral_system/media
    command: celery -A referral_system.celery_app.app worker --loglevel=info --logfile=./docker/logs/celery-worker.log --autoscale=10,3
    depends_on:
      - redis

  celery-beat:
    build: .
    container_name: celery-beat
    env_file:
      - docker/env/.env.dev
    depends_on:
      - redis
    command: celery -A referral_system.celery_app.app beat --loglevel=info --logfile=./docker/logs/celery-beat.log
    volumes:
      - media:/app/referral_system/media
      - ./:/app

  flower:
    build: .
    container_name: flower
    env_file:
      - docker/env/.env.dev
    depends_on:
      - redis
    command: celery -A referral_system.celery_app.app flower
    volumes:
      - media:/app/referral_system/media
      - ./:/app
    ports:
      - "5555:5555"